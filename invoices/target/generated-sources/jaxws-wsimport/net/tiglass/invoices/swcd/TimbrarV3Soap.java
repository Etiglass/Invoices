
package net.tiglass.invoices.swcd;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TimbrarV3Soap", targetNamespace = "http://localhost/Timbrar/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TimbrarV3Soap {


    /**
     * 
     * @param cfdiXmlIn
     * @param codigo
     * @param timbreUtf8
     * @param usuario
     * @param mensaje
     * @param pwd
     */
    @WebMethod(action = "http://localhost/Timbrar/getTimbre")
    @RequestWrapper(localName = "getTimbre", targetNamespace = "http://localhost/Timbrar/", className = "net.tiglass.invoices.swcd.GetTimbre")
    @ResponseWrapper(localName = "getTimbreResponse", targetNamespace = "http://localhost/Timbrar/", className = "net.tiglass.invoices.swcd.GetTimbreResponse")
    public void getTimbre(
        @WebParam(name = "usuario", targetNamespace = "http://localhost/Timbrar/")
        String usuario,
        @WebParam(name = "pwd", targetNamespace = "http://localhost/Timbrar/")
        String pwd,
        @WebParam(name = "cfdi_xml_in", targetNamespace = "http://localhost/Timbrar/")
        byte[] cfdiXmlIn,
        @WebParam(name = "codigo", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<Integer> codigo,
        @WebParam(name = "mensaje", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<String> mensaje,
        @WebParam(name = "timbre_utf8", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<byte[]> timbreUtf8);

    /**
     * 
     * @param cfdiXmlIn
     * @param codigo
     * @param xmlTimbrado
     * @param usuario
     * @param mensaje
     * @param pwd
     */
    @WebMethod(action = "http://localhost/Timbrar/getTimbreCFDI")
    @RequestWrapper(localName = "getTimbreCFDI", targetNamespace = "http://localhost/Timbrar/", className = "net.tiglass.invoices.swcd.GetTimbreCFDI")
    @ResponseWrapper(localName = "getTimbreCFDIResponse", targetNamespace = "http://localhost/Timbrar/", className = "net.tiglass.invoices.swcd.GetTimbreCFDIResponse")
    public void getTimbreCFDI(
        @WebParam(name = "usuario", targetNamespace = "http://localhost/Timbrar/")
        String usuario,
        @WebParam(name = "pwd", targetNamespace = "http://localhost/Timbrar/")
        String pwd,
        @WebParam(name = "cfdi_xml_in", targetNamespace = "http://localhost/Timbrar/")
        byte[] cfdiXmlIn,
        @WebParam(name = "codigo", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<Integer> codigo,
        @WebParam(name = "mensaje", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<String> mensaje,
        @WebParam(name = "xml_timbrado", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<byte[]> xmlTimbrado);

    /**
     * 
     * @param codigo
     * @param numOk
     * @param zipOut
     * @param usuario
     * @param numCfdi
     * @param mensaje
     * @param respuesta
     * @param pwd
     * @param zipIn
     * @param numError
     */
    @WebMethod(action = "http://localhost/Timbrar/getTimbresZIP")
    @RequestWrapper(localName = "getTimbresZIP", targetNamespace = "http://localhost/Timbrar/", className = "net.tiglass.invoices.swcd.GetTimbresZIP")
    @ResponseWrapper(localName = "getTimbresZIPResponse", targetNamespace = "http://localhost/Timbrar/", className = "net.tiglass.invoices.swcd.GetTimbresZIPResponse")
    public void getTimbresZIP(
        @WebParam(name = "usuario", targetNamespace = "http://localhost/Timbrar/")
        String usuario,
        @WebParam(name = "pwd", targetNamespace = "http://localhost/Timbrar/")
        String pwd,
        @WebParam(name = "num_cfdi", targetNamespace = "http://localhost/Timbrar/")
        int numCfdi,
        @WebParam(name = "zip_in", targetNamespace = "http://localhost/Timbrar/")
        byte[] zipIn,
        @WebParam(name = "codigo", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<Integer> codigo,
        @WebParam(name = "mensaje", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<String> mensaje,
        @WebParam(name = "num_ok", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<Integer> numOk,
        @WebParam(name = "num_error", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<Integer> numError,
        @WebParam(name = "zip_out", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<byte[]> zipOut,
        @WebParam(name = "respuesta", targetNamespace = "http://localhost/Timbrar/", mode = WebParam.Mode.OUT)
        Holder<String> respuesta);

}
